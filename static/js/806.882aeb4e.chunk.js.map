{"version":3,"file":"static/js/806.882aeb4e.chunk.js","mappings":"yKAgDA,QA9CA,WACI,MAAOA,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,KAClCC,EAAOC,IAAYF,EAAAA,EAAAA,UAAS,KAC5BG,EAAMC,IAAWJ,EAAAA,EAAAA,UAAS,WAajC,OACIK,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYC,SAAA,EACvBF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACIC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,YACPF,EAAAA,EAAAA,MAAA,UAAQI,MAAON,EAAMO,SAAUC,GAAKP,EAAQO,EAAEC,OAAOH,OAAOF,SAAA,EACxDC,EAAAA,EAAAA,KAAA,UAAQC,MAAM,QAAOF,SAAC,WACtBC,EAAAA,EAAAA,KAAA,UAAQC,MAAM,YAAWF,SAAC,eAC1BC,EAAAA,EAAAA,KAAA,UAAQC,MAAM,OAAMF,SAAC,UACrBC,EAAAA,EAAAA,KAAA,UAAQC,MAAM,UAASF,SAAC,mBAGhCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,WAAUC,SACpBT,EAASe,KAAI,CAACC,EAAKC,KAChBV,EAAAA,EAAAA,MAAA,OAAeC,UAAWQ,EAAIE,KAAKT,SAAA,EAC/BF,EAAAA,EAAAA,MAAA,UAAAE,SAAA,CAASO,EAAIE,KAAK,OAAU,IAAEF,EAAIG,OAD5BF,QAKlBV,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWC,SAAA,EACtBC,EAAAA,EAAAA,KAAA,SACIC,MAAOR,EACPS,SAAUC,GAAKT,EAASS,EAAEC,OAAOH,OACjCS,YAAY,0BAEhBV,EAAAA,EAAAA,KAAA,UAAQW,QAnCAC,KACXnB,EAAMoB,SACXtB,EAAY,IAAID,EAAU,CAAEkB,KAAM,OAAQC,KAAMhB,EAAOE,UACvDD,EAAS,IAETH,GAAYuB,GAAQ,IACbA,EACH,CAAEN,KAAM,MAAOC,KAAK,QAADM,OAAUpB,EAAI,2BAAAoB,OAAyBtB,EAAK,MAAME,aA4BpCI,SAAC,cAI9C,C","sources":["components/CompanionBot.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction CompanionBot() {\r\n    const [messages, setMessages] = useState([]);\r\n    const [input, setInput] = useState('');\r\n    const [mood, setMood] = useState('neutral');\r\n\r\n    const sendMessage = () => {\r\n        if (!input.trim()) return;\r\n        setMessages([...messages, { from: 'user', text: input, mood }]);\r\n        setInput('');\r\n        // Simulate bot response based on mood\r\n        setMessages(msgs => [\r\n            ...msgs,\r\n            { from: 'bot', text: `Bot (${mood}): I'm responding to \"${input}\"!`, mood }\r\n        ]);\r\n    };\r\n\r\n    return (\r\n        <div className=\"bot-window\">\r\n            <div>\r\n                <label>Mood: </label>\r\n                <select value={mood} onChange={e => setMood(e.target.value)}>\r\n                    <option value=\"happy\">Happy</option>\r\n                    <option value=\"motivated\">Motivated</option>\r\n                    <option value=\"calm\">Calm</option>\r\n                    <option value=\"neutral\">Neutral</option>\r\n                </select>\r\n            </div>\r\n            <div className=\"messages\">\r\n                {messages.map((msg, idx) => (\r\n                    <div key={idx} className={msg.from}>\r\n                        <strong>{msg.from}:</strong> {msg.text}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <div className=\"input-bar\">\r\n                <input\r\n                    value={input}\r\n                    onChange={e => setInput(e.target.value)}\r\n                    placeholder=\"Type your message...\"\r\n                />\r\n                <button onClick={sendMessage}>Send</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CompanionBot;\r\n"],"names":["messages","setMessages","useState","input","setInput","mood","setMood","_jsxs","className","children","_jsx","value","onChange","e","target","map","msg","idx","from","text","placeholder","onClick","sendMessage","trim","msgs","concat"],"sourceRoot":""}